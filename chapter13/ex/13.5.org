* Question:
Exercise 13.5: Given the following sketch of a class, write a copy
constructor that copies all the members. Your constructor should dynamically
allocate a new string (ยง 12.1.2, p. 458) and copy the object to which ps
points, rather than copying ps itself.

#+begin_src cpp
  class HasPtr {
  public:
    HasPtr(const std::string &s = std::string()): ps(new std::string(s)), i(0) { }
  private:
    std::string *ps;
    int i;
  };
#+end_src

* COMMENT Answer:
#+begin_src cpp
  class HasPtr {
  public:
    HasPtr(const std::string &s = std::string()): ps(new std::string(s)), i(0) { }
    HasPtr(const HasPtr &hp) :ps(new std::string(*hp.ps)), i(hp.i) { }
  private:
    std::string *ps;
    int i;
  };

#+end_src
