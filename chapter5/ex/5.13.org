* Question:
Exercise 5.13: Each of the programs in the highlighted text on page 184 contains a common programming error. Identify and correct each error.
Code for Exercise 5.13
(a)
#+begin_src cpp
  unsigned aCnt = 0, eCnt = 0, iouCnt = 0; char ch = next_text();
  switch (ch) {
   case 'a': aCnt++;
   case 'e': eCnt++;
   default: iouCnt++;
  }
#+end_src

(b)
#+begin_src cpp
  unsigned index = some_value(); switch (index) {
   case 1:
     int ix = get_value();
     ivec[ ix ] = index; break;
   default:
     ix = ivec.size()-1; ivec[ ix ] = index;
   }
#+end_src


(c)
#+begin_src cpp
  unsigned evenCnt = 0, oddCnt = 0; int digit = get_num() % 10;
  switch (digit) {
   case 1, 3, 5, 7, 9: oddcnt++;
     break;
   case 2, 4, 6, 8, 10:
     evencnt++;
     break;
   }
#+end_src

(d)
#+begin_src cpp
  unsigned ival=512, jval=1024, kval=4096; unsigned bufsize;
  unsigned swt = get_bufCnt();
  switch(swt) {
    bufsize = kval * sizeof(int); break;
  case ival:
    bufsize = ival * sizeof(int); break;
  case jval:
    bufsize = jval * sizeof(int); break；
   case kval:
    bufsize = kval * sizeof(int); break;
  }
#+end_src

* Answer:
(a) lack of `break`, fix it:
#+begin_src cpp
  unsigned aCnt = 0, eCnt = 0, iouCnt = 0; char ch = next_text();
  switch (ch) {
   case 'a': aCnt++; break;
   case 'e': eCnt++; break;
   default: iouCnt++;
  }
#+end_src

(b) the `int ix = get_value()` decaration in case 1, can't access by default part.Fix it:
#+begin_src cpp
  unsigned index = some_value(); switch (index) {
   case 1:
     int ix;
     ix = get_value();
     ivec[ ix ] = index; break;
   default:
     ix = ivec.size()-1; ivec[ ix ] = index;
   }
#+end_src

(c) lack of `case` and the 10 can't reach in even, please change 10 to 0. Fix it:
#+begin_src cpp
  unsigned evenCnt = 0, oddCnt = 0; int digit = get_num() % 10;
  switch (digit) {
   case 1: case 3: case 5: case 7: case 9:
     oddcnt++;
     break;
   case 0: case 2: case 4: case 6: case 8: 
     evencnt++;
     break;
   }
#+end_src

(d) the condition in `switch` must be const in compile time. Fix it:
#+begin_src cpp
  constexpr unsigned ival=512, jval=1024, kval=4096; unsigned bufsize;
  unsigned swt = get_bufCnt();
  switch(swt) {
    bufsize = kval * sizeof(int); break;
  case ival:
    bufsize = ival * sizeof(int); break;
  case jval:
    bufsize = jval * sizeof(int); break；
   case kval:
    bufsize = kval * sizeof(int); break;
  }
#+end_src
