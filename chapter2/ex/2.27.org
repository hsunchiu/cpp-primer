* Question:
Exercise 2.27: Which of the following initializations are legal? Explain why.
(a) int i = -1, &r = 0;
(b) int *const p2 = &i2;
(c) const int i = -1, &r = 0;
(d) const int *const p3 = &i2;
(e) const int *p1 = &i2;
(f) const int &const r2;
(g) const int i2 = i, &r = i;

* Answer:
(a) illegal, r reference to a liteal must be qualified by const.
(b) it depends on the type of i2, if i2 is nonconst int, it's legal, if i2 is a const int, it is illegal.
(c) legal, const int i  and const reference to a literal.
(d) legal, a pointer to const int can point to nonconst and const variable.
(f) ilegal,  a reference must initilize when declare. I think it is not necessary to use const to qualify a reference.
(g) legal. i2 is initialized by i, but it is const, r is a const reference to a nonconst variable.
